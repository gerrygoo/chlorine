{"mappings":"SAuBSA,YAAYC,GACpB,MAAMC,EAAwB,GACxBC,EAA0B,GAEhC,IAAI,IAAIC,EAAU,EAAGA,GAAWC,KAAKC,KAAKL,GAAIG,IACzCH,EAAIG,GAAW,IAClBD,EAAcI,KAAKH,GAEfH,EAAIG,GAAWA,GAClBF,EAAYM,OAAO,EAAG,EAAGP,EAAEG,IAK9B,MAAO,IAAID,KAAkBD,YAIrBO,UAAUC,EAAWC,EAAUC,GACtC,OAAOP,KAAKQ,MAAMH,GAAMC,EAAID,GAAKE,YAG1BE,iBAAiBC,EAAsBC,GAE/C,OAAOD,EADKN,UAAU,EAAGM,EAAWE,OAAS,EAAGD,aAIxCE,UAAUC,EAAoBC,EAAqBC,GAI3D,MAIMC,EAAWR,iBAJSd,YAAYoB,GACnCG,QAAOC,GAAYA,GAAYL,GAC7BK,EAAWL,GAAc,IAEuBE,GAErD,MAAO,CACNG,SAAAF,EACAG,KAAML,EAAcE,EACpBI,KAAM,YAKCC,mBAAmBC,EAAkBC,GAC7C,MAAMC,EAAsB,GAE5B,IAAIC,EAAI,EACJC,EAA+B,EAAXJ,OACjBI,GAAqBH,GAC3BC,EAAUvB,KAAKyB,GACfA,EAA+B,EAAXJ,IAAiBG,EAGtC,OAAOD,WAGCG,kBAAkBL,EAAiBM,EAAwBC,EAA2BC,GAK9F,MAAMC,EAAWF,EAAkBD,EAC7BI,EAAoB,EAA+B,EAA3BjC,KAAKkC,IAAI,GAAMF,GAEvCG,EAAoBb,mBAAmBC,EAAUO,GACvD,GAAiC,IAA7BK,EAAkBvB,OAErB,OADAwB,QAAQC,IAAI,+CACLP,EAQR,OAAOrB,iBAAiB0B,GADR,GAAM,GAAMJ,EAAcE,GAAqB,EAAID,IAAW,YAItEM,YAAYC,EAAYV,EAAyBb,GACzD,MAAMwB,EAAkB,GACxB,IAAIV,EAAoBD,OAEjBC,EAAoB,GAAG,CAC7B,MAAMW,EAAgBb,kBAAkBW,EAAK3B,OAAQiB,EAAiBC,EAAmBd,GAEzFwB,EAAOtC,KAAKW,UAAU0B,EAAK3B,OAAQ6B,EAAezB,IAElDc,GAAqBW,EAGtB,MAAO,CAAED,OAAAA,GAGV,MAAME,KAAOC,SAASC,cAAc,QAC9BC,OAASF,SAASG,eAAe,UACvCJ,KAAKK,iBAAiB,UAAUC,IAC/BA,EAAMC,iBAEN,MACC,GAAIC,MAAOC,GACX,GAAID,MAAOE,GACX,GAAIF,MAAOG,IACRL,EAAMM,OAEJC,EAAUjB,YACd,CACC1B,OAAQ4C,SAASL,GACjBM,MAAO,KAERD,SAASJ,GACTI,SAASH,GAAc,KAGzBR,OAAOa,YAAcH,EAAQf,OAC1BmB,KAAG,EAAIxC,SAAAA,EAAUC,KAAAA,KAAM,GAAQA,QAAWD,MAC3CyC,KAAK","sources":["src/index.ts"],"sourcesContent":["\n// a workout is a sequence of distances and multipliers\n// the distances are a multiple of the pool length\ninterface Drill {\n\tinterval: number\n\treps: number\n\n\trest: number\n}\n\ninterface Workout {\n\tdrills: Drill[]\n}\n\ninterface Pool {\n\tlength: number\n\tunit: 'm' | 'y'\n}\n\ninterface Endurance {\n  stamina: number\n}\n\nfunction getDivisors(n: number): number[] {\n\tconst bigDivisors: number[] = []\n\tconst smallDivisors: number[] = []\n\n\tfor(let divisor = 1; divisor <= Math.sqrt(n); divisor++) {\n\t\tif (n % divisor == 0) {\n\t\t\tsmallDivisors.push(divisor)\n\n\t\t\tif (n / divisor != divisor) {\n\t\t\t\tbigDivisors.splice(0, 0, n/divisor)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [...smallDivisors, ...bigDivisors]\n}\n\n// requires a > b and x in [0, 1]\nfunction scaleInto(a: number, b:number, x: number) {\n  return Math.floor(a + ((b - a) * x))\n}\n\nfunction selectUsingScale(candidates: number[], scale: number): number {\n\tconst idx = scaleInto(0, candidates.length - 1, scale)\n\treturn candidates[idx]\n}\n\nfunction makeDrill(poolLength: number, drillLength: number, endurance: number): Drill {\n\t// the lap length is between poolLength and drillLength\n\t// and is a multiple of poolLength\n\t// and evenly divides drillLength\n\tconst possibleIntervals = getDivisors(drillLength)\n\t  .filter(interval => interval >= poolLength &&\n\t\t\t\t\t interval % poolLength == 0)\n\t\n\tconst interval = selectUsingScale(possibleIntervals, endurance)\n\n\treturn {\n\t\tinterval,\n\t\treps: drillLength / interval,\n\t\trest: 0,\n\t}\n}\n\n// TODO: support finishing drills on the other side of the pool\nfunction makeDrillDistances(poolSize: number, maxDistance: number): number[] {\n\tconst distances: number[] = []\n\n\tlet i = 1\n\tlet candidateDistance = poolSize * 2\n\twhile (candidateDistance <= maxDistance) {\n\t\tdistances.push(candidateDistance)\n\t\tcandidateDistance = poolSize * 2 * ++i\n\t}\n\n\treturn distances\n}\n\nfunction makeDrillDistance(poolSize:number, workoutDistance:number, remainingDistance: number, lengthBias:number): number {\n\t// we want the distance to be a function of:\n\t// - the 'stage' of the workout (warmup, main, cooldown)\n\t// - a bias towards length\n\t// [poolSize, remaining]\n\tconst progress = remainingDistance/workoutDistance\n\tconst peripheryDistance = 1 - Math.abs(0.5 - progress) * 2\n\n\tconst possibleDistances = makeDrillDistances(poolSize, remainingDistance)\n\tif (possibleDistances.length === 0) {\n\t\tconsole.log('oops! no drill distances could be generated')\n\t\treturn remainingDistance\n\t}\n\n\t// skew towards smaller options at the beginning\n\t// and towards larger options in the end, because:\n\t// - initially the options are dominated by larger numbers\n\t// - there are few options near the end\n\tconst scale = ((0.5 + 0.5 * lengthBias) + peripheryDistance + (1 - progress))/3\n\treturn selectUsingScale(possibleDistances, scale)\n}\n\nfunction makeWorkout(pool: Pool, workoutDistance: number, endurance: number): Workout {\n\tconst drills: Drill[] = []\n\tlet remainingDistance = workoutDistance\n\n\twhile (remainingDistance > 0) {\n\t\tconst drillDistance = makeDrillDistance(pool.length, workoutDistance, remainingDistance, endurance)\n\n\t\tdrills.push(makeDrill(pool.length, drillDistance, endurance))\n\n\t\tremainingDistance -= drillDistance\n\t}\n\n\treturn { drills }\n}\n\nconst form = document.querySelector('form')\nconst result = document.getElementById('result')\nform.addEventListener('submit', event => {\n\tevent.preventDefault()\n\n\tconst {\n\t\t0: {value: poolLengthStr},\n\t\t1: {value: workoutDistanceStr},\n\t\t2: {value: enduranceStr},\n\t} = event.target\n\n\tconst workout = makeWorkout(\n\t\t\t{\n\t\t\t\tlength: parseInt(poolLengthStr),\n\t\t\t\tunits: 'm'\n      },\n\t\t\tparseInt(workoutDistanceStr),\n\t\t\tparseInt(enduranceStr)/100\n\t\t))\n\n\tresult.textContent = workout.drills\n\t  .map(({ interval, reps }) => `${reps} of ${interval}`)\n\t\t.join(', ')\n})\n"],"names":["getDivisors","n","bigDivisors","smallDivisors","divisor","Math","sqrt","push","splice","scaleInto","a","b","x","floor","selectUsingScale","candidates","scale","length","makeDrill","poolLength","drillLength","endurance","interval1","filter","interval","reps","rest","makeDrillDistances","poolSize","maxDistance","distances","i","candidateDistance","makeDrillDistance","workoutDistance","remainingDistance","lengthBias","progress","peripheryDistance","abs","possibleDistances","console","log","makeWorkout","pool","drills","drillDistance","form","document","querySelector","result","getElementById","addEventListener","event","preventDefault","value","poolLengthStr","workoutDistanceStr","enduranceStr","target","workout","parseInt","units","textContent","map","join"],"version":3,"file":"index.7978882e.js.map"}